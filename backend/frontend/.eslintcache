[{"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\index.js":"1","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\App.js":"2","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\store.js":"3","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\reportWebVitals.js":"4","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Footer.js":"5","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Header.js":"6","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\ProductScreen.js":"7","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\HomeScreen.js":"8","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\ShippingScreen.js":"9","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\ProfileScreen.js":"10","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\PaymentScreen.js":"11","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js":"12","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\LoginScreen.js":"13","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\OrderScreen.js":"14","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\reducers\\productReducers.js":"15","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\reducers\\cartReducers.js":"16","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\RegisterScreen.js":"17","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\UserEditScreen.js":"18","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\ProductEditScreen.js":"19","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\ProductListScreen.js":"20","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\OrderListScreen.js":"21","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\CartScreen.js":"22","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\reducers\\orderReducer.js":"23","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\reducers\\userReducers.js":"24","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\UserListScreen.js":"25","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Rating.js":"26","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Loader.js":"27","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\SearchBox.js":"28","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Message.js":"29","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\products.js":"30","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Product.js":"31","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Paginate.js":"32","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\ProductCarousel.js":"33","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\FormContainer.js":"34","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\actions\\cartActions.js":"35","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\actions\\userActions.js":"36","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\actions\\orderActions.js":"37","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\CheckoutSteps.js":"38","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\constants\\productConstants.js":"39","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\constants\\userConstants.js":"40","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\actions\\productActions.js":"41","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\constants\\orderConstants.js":"42","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\constants\\cartConstants.js":"43"},{"size":597,"mtime":1613389594404,"results":"44","hashOfConfig":"45"},{"size":2227,"mtime":1613388397544,"results":"46","hashOfConfig":"45"},{"size":2270,"mtime":1613383710100,"results":"47","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"45"},{"size":298,"mtime":1612279865085,"results":"49","hashOfConfig":"45"},{"size":2163,"mtime":1613391934367,"results":"50","hashOfConfig":"45"},{"size":11778,"mtime":1613325543020,"results":"51","hashOfConfig":"45"},{"size":1596,"mtime":1613386132041,"results":"52","hashOfConfig":"45"},{"size":2803,"mtime":1612729216533,"results":"53","hashOfConfig":"45"},{"size":4882,"mtime":1613225991158,"results":"54","hashOfConfig":"45"},{"size":1377,"mtime":1612728778841,"results":"55","hashOfConfig":"45"},{"size":4258,"mtime":1612992966117,"results":"56","hashOfConfig":"45"},{"size":2016,"mtime":1612692705900,"results":"57","hashOfConfig":"45"},{"size":6434,"mtime":1613394429732,"results":"58","hashOfConfig":"45"},{"size":3555,"mtime":1613383669642,"results":"59","hashOfConfig":"45"},{"size":1139,"mtime":1612810540887,"results":"60","hashOfConfig":"45"},{"size":3007,"mtime":1612723686241,"results":"61","hashOfConfig":"45"},{"size":2874,"mtime":1613228770495,"results":"62","hashOfConfig":"45"},{"size":5393,"mtime":1613314432005,"results":"63","hashOfConfig":"45"},{"size":3630,"mtime":1613383202938,"results":"64","hashOfConfig":"45"},{"size":2226,"mtime":1613316561278,"results":"65","hashOfConfig":"45"},{"size":3398,"mtime":1612690607994,"results":"66","hashOfConfig":"45"},{"size":2945,"mtime":1613316930668,"results":"67","hashOfConfig":"45"},{"size":3408,"mtime":1613226219230,"results":"68","hashOfConfig":"45"},{"size":2369,"mtime":1613231082379,"results":"69","hashOfConfig":"45"},{"size":1940,"mtime":1612342159851,"results":"70","hashOfConfig":"45"},{"size":311,"mtime":1612453222177,"results":"71","hashOfConfig":"45"},{"size":889,"mtime":1613381680845,"results":"72","hashOfConfig":"45"},{"size":209,"mtime":1612445707821,"results":"73","hashOfConfig":"45"},{"size":2607,"mtime":1612342188631,"results":"74","hashOfConfig":"45"},{"size":1045,"mtime":1612690175639,"results":"75","hashOfConfig":"45"},{"size":701,"mtime":1613383060948,"results":"76","hashOfConfig":"45"},{"size":1144,"mtime":1613386636458,"results":"77","hashOfConfig":"45"},{"size":318,"mtime":1612691126518,"results":"78","hashOfConfig":"45"},{"size":1185,"mtime":1612728675472,"results":"79","hashOfConfig":"45"},{"size":5997,"mtime":1613226855340,"results":"80","hashOfConfig":"45"},{"size":4969,"mtime":1613318566914,"results":"81","hashOfConfig":"45"},{"size":1124,"mtime":1612727342969,"results":"82","hashOfConfig":"45"},{"size":1536,"mtime":1613383593367,"results":"83","hashOfConfig":"45"},{"size":1506,"mtime":1613226077116,"results":"84","hashOfConfig":"45"},{"size":5692,"mtime":1613383862113,"results":"85","hashOfConfig":"45"},{"size":1274,"mtime":1613316815980,"results":"86","hashOfConfig":"45"},{"size":296,"mtime":1612810356994,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"nnp70r",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"90"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\index.js",[],["192","193"],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\App.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\store.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\reportWebVitals.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Footer.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Header.js",["194"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n\r\nfunction Header() {\r\n\r\n\tconst userLogin = useSelector(state => state.userLogin)\r\n\tconst { userInfo } = userLogin\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst logoutHandler = () => {\r\n\t\tdispatch(logout())\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<Navbar fixed='top' bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<LinkContainer to='/'>\r\n\t\t\t\t\t\t<Navbar.Brand >ProShop</Navbar.Brand>\r\n\t\t\t\t\t</LinkContainer>\r\n\r\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t\t<SearchBox />\r\n\t\t\t\t\t\t<Nav className=\"ml-auto\">\r\n\r\n\t\t\t\t\t\t\t<LinkContainer to='/cart'>\r\n\t\t\t\t\t\t\t\t<Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n\t\t\t\t\t\t\t</LinkContainer>\r\n\r\n\t\t\t\t\t\t\t{userInfo ? (\r\n\t\t\t\t\t\t\t\t<NavDropdown title={userInfo.name} id='username'>\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/profile'>\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Profile</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\r\n\t\t\t\t\t\t\t\t\t<NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n\t\t\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t\t\t\t):(\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/login'>\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{userInfo && userInfo.isAdmin && (\r\n\t\t\t\t\t\t\t\t<NavDropdown title='Admin' id='adminmenu'>\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/admin/userlist'>\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Users</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/admin/productlist'>\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Products</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/admin/orderlist'>\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Orders</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t</Container>\r\n\t\t\t</Navbar>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\ProductScreen.js",["195","196"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Row, Col, Image, ListGroup, Button, Card, Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport products from '../products'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product} = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { loading:loadingProductReview, error:errorProductReview, success:successProductReview} = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () =>{\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id,\r\n            {\r\n            rating,\r\n            comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    :(\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant=\"flush\">\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e)=>setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n                                                                    [...Array(product.countInStock).keys()].map((x)=>(\r\n                                                                          <option key={x+1} value={x+1}>\r\n                                                                            {x+1}\r\n                                                                          </option>  \r\n                                                                        ))   \r\n                                                                }\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                )}\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                className='btn-block' \r\n                                                disabled={product.countInStock <= 0}\r\n                                                type='button'\r\n                                                onClick={addToCartHandler}\r\n\r\n                                                 >Add to Cart</Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review)=>(\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'/>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a Review</h4>\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e)=>setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=\"\">Select...</option>\r\n                                                            <option value=\"1\">1 - Poor</option>\r\n                                                            <option value=\"2\">2 - Fair</option>\r\n                                                            <option value=\"3\">3 - Good</option>\r\n                                                            <option value=\"4\">4 - Very Good</option>\r\n                                                            <option value=\"5\">5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e)=>setComment(e.target.value)}\r\n                                                        >\r\n                                                            \r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                </Form>\r\n                                            ):(\r\n                                                <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\HomeScreen.js",["197"],"import React, {useState, useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nfunction HomeScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n\r\n    }, [dispatch, keyword])\r\n    \r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                :error ? <Message variant='danger'>{error}</Message>\r\n                    : \r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product =>(\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ) )}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\ShippingScreen.js",["198"],"import React, {useState, useEffect} from 'react'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\n\r\nfunction ShippingScreen({history}) {\r\n\r\n\tconst cart = useSelector(state=>state.cart)\r\n\tconst {shippingAddress} = cart\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst [address, setAddress] = useState(shippingAddress.address)\r\n\tconst [city, setCity] = useState(shippingAddress.city)\r\n\tconst [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n\tconst [country, setCountry] = useState(shippingAddress.country)\r\n\tconst [phone, setPhone] = useState(shippingAddress.phone)\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tdispatch(saveShippingAddress({address, city, postalCode, country, phone}))\r\n\t\thistory.push('/payment')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t<CheckoutSteps step1 step2/>\r\n\t\t\t<h1>Shipping</h1>\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t\r\n\t\t\t\t<Form.Group controlId='address'>\r\n\t\t\t\t\t<Form.Label>Address</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t \ttype='text' \r\n\t\t\t\t\t\tplaceholder='Enter Address'\r\n\t\t\t\t\t\tvalue={address ? address : ''}\r\n\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId='city'>\r\n\t\t\t\t\t<Form.Label>City</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t \ttype='text' \r\n\t\t\t\t\t\tplaceholder='Enter City '\r\n\t\t\t\t\t\tvalue={city ? city : ''}\r\n\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId='postalCode'>\r\n\t\t\t\t\t<Form.Label>Postal Code</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t \ttype='text' \r\n\t\t\t\t\t\tplaceholder='Enter Postal Code'\r\n\t\t\t\t\t\tvalue={postalCode ? postalCode : ''}\r\n\t\t\t\t\t\tonChange={(e) => setPostalCode(e.target.value)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId='country'>\r\n\t\t\t\t\t<Form.Label>Country</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t \ttype='text' \r\n\t\t\t\t\t\tplaceholder='Enter Country'\r\n\t\t\t\t\t\tvalue={country ? country : ''}\r\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId='phone'>\r\n\t\t\t\t\t<Form.Label>Phone</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t \ttype='text' \r\n\t\t\t\t\t\tplaceholder='Enter phone number'\r\n\t\t\t\t\t\tvalue={phone ? phone : ''}\r\n\t\t\t\t\t\tonChange={(e) => setPhone(e.target.value)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\tContinue\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</FormContainer>\r\n\t)\r\n}\r\n\r\nexport default ShippingScreen","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\ProfileScreen.js",["199","200"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport {listMyOrders}  from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n\tconst [name, setName] = useState('')\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [confirmPassword, setConfirmPassword] = useState('')\r\n\tconst [message, setMessage] = useState('')\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst userDetails = useSelector(state => state.userDetails)\r\n\tconst {error, loading, user} = userDetails\r\n\r\n\tconst userLogin = useSelector(state => state.userLogin)\r\n\tconst {userInfo} = userLogin\r\n\r\n\tconst userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n\tconst {success} = userUpdateProfile\r\n\r\n\tconst orderListMy = useSelector(state => state.orderListMy)\r\n\tconst {loading:loadingOrders, error:errorOrders, orders} = orderListMy\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!userInfo) {\r\n\t\t\thistory.push('/login')\r\n\t\t}else{\r\n\t\t\tif(!user || !user.name || success || userInfo._id !== user._id){\r\n\t\t\t\tdispatch({ type:USER_UPDATE_PROFILE_RESET })\r\n\t\t\t\tdispatch(getUserDetails('profile'))\r\n\t\t\t\tdispatch(listMyOrders())\r\n\t\t\t}else{\r\n\t\t\t\tsetName(user.name)\r\n\t\t\t\tsetEmail(user.email)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [dispatch, history, userInfo, user, success])\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tif (password != confirmPassword){\r\n\t\t\tsetMessage('Passwords do not match')\r\n\t\t}else{\r\n\t\t\tdispatch(updateUserProfile({'id':user._id,\r\n\t\t\t'name':name, 'email':email, 'password':password}))\r\n\t\t\tsetMessage('Profile updated!')\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md={3}>\r\n\t\t\t\t<h2>User Profile</h2>\r\n\t\t\t\t{message && <Message variant={message==='Profile updated!' ? 'info' : 'danger'}>{message}</Message>}\r\n\t\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t\t{loading && <Loader />}\r\n\t\t\t\t<Form onSubmit={submitHandler}>\r\n\r\n\t\t\t\t\t<Form.Group controlId='name'>\r\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t \ttype='name' \r\n\t\t\t\t\t\t\tplaceholder='Enter Name'\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t \ttype='email' \r\n\t\t\t\t\t\t\tplaceholder='Enter Email'\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId='password'>\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t \ttype='password' \r\n\t\t\t\t\t\t\tplaceholder='Enter Password'\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId='passwordConfirm'>\r\n\t\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password' \r\n\t\t\t\t\t\t\tplaceholder='Confirm Password'\r\n\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t</Form>\r\n\t\t\t</Col>\r\n\r\n\t\t\t<Col md={9}>\r\n\t\t\t\t<h2>My Orders</h2>\r\n\t\t\t\t{loadingOrders ? (\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t\t) : errorOrders ? (\r\n\t\t\t\t\t\t<Message variant='danger'>{errorOrders}</Message>\r\n\t\t\t\t\t):(\r\n\t\t\t\t\t\t<Table striped responsive className='table-sm'>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n\t\t\t\t\t\t\t\t\t<th>Paid</th>\r\n\t\t\t\t\t\t\t\t\t<th>Delivered</th>\r\n\t\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{orders.map(order=>(\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>{order._id}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{order.createdAt.substring(0,10)}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{order.totalPrice}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-times' style={{color:'red'}}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{order.isDelivered ? order.deliveredAt.substring(0,10) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-times' style={{color:'red'}}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t)}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/order/${order._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button className='btn-sm'>Details</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t)}\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t)\r\n}\r\n\r\nexport default ProfileScreen","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\PaymentScreen.js",["201"],"import React, {useState, useEffect} from 'react'\r\nimport { Form, Button, Col} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n\tconst cart = useSelector(state=>state.cart)\r\n\tconst {shippingAddress} = cart\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n\tif(!shippingAddress.address){\r\n\t\thistory.push('/shipping')\r\n\t}\r\n\r\n\tconst submitHandler = (e) =>{\r\n\t\te.preventDefault()\r\n\t\tdispatch(savePaymentMethod(paymentMethod))\r\n\t\thistory.push('/placeorder')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t<CheckoutSteps step1 step2 step3 />\r\n\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label as='legend'>Select Method</Form.Label>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\tlabel='PayPal or Credit Card'\r\n\t\t\t\t\t\t\tid='paypal'\r\n\t\t\t\t\t\t\tname='paymentMethod'\r\n\t\t\t\t\t\t\tchecked\r\n\t\t\t\t\t\t\tonChange={(e)=> setPaymentMethod(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Form.Check>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\tContinue\r\n\t\t\t\t</Button>\t\r\n\t\t\t</Form>\r\n\t\t</FormContainer>\r\n\t)\r\n}\r\n\r\nexport default PaymentScreen","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js",["202","203"],"import React, {useState, useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({history}) {\r\n\r\n\tconst dispatch=useDispatch()\r\n\r\n\tconst orderCreate = useSelector(state=>state.orderCreate)\r\n\tconst {order, error, success} = orderCreate\r\n\r\n\tconst cart = useSelector(state=>state.cart)\r\n\r\n\tcart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n\tcart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 0).toFixed(2)\r\n\tcart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\tcart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\tif(!cart.paymentMethod){\r\n\t\thistory.push('/payment')\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(success){\r\n\t\t\thistory.push(`/order/${order._id}`)\r\n\t\t\tdispatch({type: ORDER_CREATE_RESET})\r\n\t\t}\r\n\t},[success, history])\r\n\r\n\tconst placeOrder =()=>{\r\n\t\tdispatch(createOrder({\r\n\t\t\torderItems:cart.cartItems,\r\n\t\t\tshippingAddress:cart.shippingAddress,\r\n\t\t\tpaymentMethod:cart.paymentMethod,\r\n\t\t\titemsPrice:cart.itemsPrice,\r\n\t\t\tshippingPrice:cart.shippingPrice,\r\n\t\t\ttaxPrice:cart.taxPrice,\r\n\t\t\ttotalPrice:cart.totalPrice,\r\n\t\t\t}))\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CheckoutSteps step1 step2 step3 step4 />\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Shipping</h2>\r\n\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Shipping: </strong>\r\n\t\t\t\t\t\t\t\t{cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n\t\t\t\t\t\t\t\t{'  '}\r\n\t\t\t\t\t\t\t\t{cart.shippingAddress.postalCode},\r\n\t\t\t\t\t\t\t\t{'  '}\r\n\t\t\t\t\t\t\t\t{cart.shippingAddress.country}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Payment Method</h2>\r\n\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Method: </strong>\r\n\t\t\t\t\t\t\t\t{cart.paymentMethod}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Order Items</h2>\r\n\t\t\t\t\t\t\t{cart.cartItems.length === 0 ? <Message variant='info'>\r\n\t\t\t\t\t\t\t\tYour cart is empty\r\n\t\t\t\t\t\t\t</Message> : (\r\n\t\t\t\t\t\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t\t\t\t\t\t{cart.cartItems.map((item,index)=>(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image src={item.image} alt={item.name} fluid rounded />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/products/${item.product}`}>{item.name}</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<h2>Order Summary</h2>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Items</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${cart.itemsPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Shipping:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${cart.shippingPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Tax:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${cart.taxPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Total:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${cart.totalPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\tclassName='btn-block'\r\n\t\t\t\t\t\t\t\t\tdisabled={cart.cartItems === 0}\r\n\t\t\t\t\t\t\t\t\tonClick={placeOrder}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PlaceOrderScreen","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\OrderScreen.js",["204"],"import React, {useState, useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({match, history}) {\r\n\r\n\tconst orderId = match.params.id \r\n\r\n\tconst dispatch=useDispatch()\r\n\r\n\tconst [sdkReady, setSdkReady] = useState(false)\r\n\r\n\tconst orderDetails = useSelector(state=>state.orderDetails)\r\n\tconst {order, error, loading} = orderDetails\r\n\r\n\tconst orderPay = useSelector(state=>state.orderPay)\r\n\tconst {loading:loadingPay, success:successPay} = orderPay\r\n\r\n\tconst orderDeliver = useSelector(state=>state.orderDeliver)\r\n\tconst {loading:loadingDeliver, success:successDeliver} = orderDeliver\r\n\r\n\tconst userLogin = useSelector(state=>state.userLogin)\r\n\tconst {userInfo} = userLogin\r\n\r\n\tif(!loading && !error){\r\n\t\torder.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n\t}\r\n\t\r\n\r\n\tconst addPayPalScript = () => {\r\n\t\tconst script = document.createElement('script')\r\n\t\tscript.type = 'text/javascript'\r\n\t\tscript.src = \"https://www.paypal.com/sdk/js?client-id=AesvkLlp2cBhCHzw9hoU3iWGpQ8nywkgr4Rwr00e193gpGSCiWRD82wIFKQC4zvyVeJEySeBrHAQmrra&currency=RUB\"\r\n\t\tscript.async = true\r\n\t\tscript.onload = () => {\r\n\t\t\tsetSdkReady(true)\r\n\t\t}\r\n\t\tdocument.body.appendChild(script)\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(!userInfo){\r\n\t\t\thistory.push('/login')\r\n\t\t}\r\n\r\n\t\tif(!order || successPay || order._id !== Number(orderId) || successDeliver){\r\n\t\t\tdispatch({type:ORDER_PAY_RESET})\r\n\t\t\tdispatch({type:ORDER_DELIVER_RESET})\r\n\t\t\tdispatch(getOrderDetails(orderId))\r\n\t\t}else if(!order.isPaid){\r\n\t\t\tif(!window.paypal){\r\n\t\t\t\taddPayPalScript()\r\n\t\t\t}else{\r\n\t\t\t\tsetSdkReady(true)\r\n\t\t\t}\r\n\t\t}\r\n\t},[dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\tconst successPaymentHandler = (paymentResult) => {\r\n\t\tdispatch(payOrder(orderId, paymentResult))\r\n\t}\r\n\r\n\tconst deliverHandler = () =>{\r\n\t\tdispatch(deliverOrder(order))\r\n\t}\r\n\r\n\treturn loading ?(\r\n\t\t\t<Loader />\r\n\t\t): error ? (\r\n\t\t\t\t<Message variant='danger'>{error}</Message>\r\n\t\t\t):(\r\n\t\t<div>\r\n\t\t\t<h1>Order: {order._id}</h1>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Shipping</h2>\r\n\t\t\t\t\t\t\t<p><strong>Name: </strong>{order.user.name}</p>\r\n\t\t\t\t\t\t\t<p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Shipping: </strong>\r\n\t\t\t\t\t\t\t\t{order.shippingAddress.address}, {order.shippingAddress.city}\r\n\t\t\t\t\t\t\t\t{'  '}\r\n\t\t\t\t\t\t\t\t{order.shippingAddress.postalCode},\r\n\t\t\t\t\t\t\t\t{'  '}\r\n\t\t\t\t\t\t\t\t{order.shippingAddress.country}\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t{order.isDelivered ? (\r\n\t\t\t\t\t\t\t\t\t<Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Message variant='warning'>Not Delivered</Message>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Payment Method</h2>\r\n\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Method: </strong>\r\n\t\t\t\t\t\t\t\t{order.paymentMethod}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t{order.isPaid ? (\r\n\t\t\t\t\t\t\t\t\t<Message variant='success'>Paid on {order.paidAt}</Message>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Message variant='warning'>Not Paid</Message>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Order Items</h2>\r\n\t\t\t\t\t\t\t{order.orderItems.length === 0 ? <Message variant='info'>\r\n\t\t\t\t\t\t\t\tOrder is empty\r\n\t\t\t\t\t\t\t</Message> : (\r\n\t\t\t\t\t\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t\t\t\t\t\t{order.orderItems.map((item,index)=>(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image src={item.image} alt={item.name} fluid rounded />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/products/${item.product}`}>{item.name}</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<h2>Order Summary</h2>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Items</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${order.itemsPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Shipping:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${order.shippingPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Tax:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${order.taxPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Total:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>RUB{order.totalPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t{!order.isPaid && (\r\n\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t{loadingPay && <Loader />}\r\n\t\t\t\t\t\t\t\t\t{!sdkReady ? (\r\n\t\t\t\t\t\t\t\t\t\t<Loader />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<PayPalButton\r\n\t\t\t\t\t\t\t\t\t\t\t\tcreateOrder={(data, actions) => {\r\n\t\t\t\t\t\t\t\t\t          \treturn actions.order.create({\r\n\t\t\t\t\t\t\t\t\t            purchase_units: [{\r\n\t\t\t\t\t\t\t\t\t              amount: {\r\n\t\t\t\t\t\t\t\t\t                currency_code: \"RUB\",\r\n\t\t\t\t\t\t\t\t\t                value: order.totalPrice,\r\n\t\t\t\t\t\t\t\t\t              }\r\n\t\t\t\t\t\t\t\t\t            }],\r\n\t\t\t\t\t\t\t\t\t            // application_context: {\r\n\t\t\t\t\t\t\t\t\t            //   shipping_preference: \"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\r\n\t\t\t\t\t\t\t\t\t            // }\r\n\t\t\t\t\t\t\t\t\t          })\r\n\t\t\t\t\t\t\t\t\t        }}\r\n\t\t\t\t\t\t\t\t\t\t\tonSuccess={successPaymentHandler}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup>\r\n\r\n\r\n\t\t\t\t\t\t{loadingDeliver && <Loader />}\r\n\t\t\t\t\t\t{userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n\t\t\t\t\t\t\t\t\tMark As Deliver\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default OrderScreen","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\reducers\\productReducers.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\reducers\\cartReducers.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\RegisterScreen.js",["205"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({location, history}) {\r\n\r\n\tconst [name, setName] = useState('')\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [confirmPassword, setConfirmPassword] = useState('')\r\n\tconst [message, setMessage] = useState('')\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n\tconst userRegister = useSelector(state => state.userRegister)\r\n\tconst {error, loading, userInfo} = userRegister\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInfo) {\r\n\t\t\thistory.push(redirect)\r\n\t\t}\r\n\t}, [history, userInfo, redirect])\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tif (password != confirmPassword){\r\n\t\t\tsetMessage('Passwords do not match')\r\n\t\t}else{\r\n\t\t\tdispatch(register(name, email, password))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t<h1>Register</h1>\r\n\t\t\t{message && <Message variant='danger'>{message}</Message>}\r\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t{loading && <Loader />}\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\r\n\t\t\t\t<Form.Group controlId='name'>\r\n\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t \ttype='name' \r\n\t\t\t\t\t\tplaceholder='Enter Name'\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t \ttype='email' \r\n\t\t\t\t\t\tplaceholder='Enter Email'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId='password'>\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t \ttype='password' \r\n\t\t\t\t\t\tplaceholder='Enter Password'\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId='passwordConfirm'>\r\n\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\ttype='password' \r\n\t\t\t\t\t\tplaceholder='Confirm Password'\r\n\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\tRegister\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t</Form>\r\n\r\n\t\t\t<Row className='py-3'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\tHave an Account? <Link\r\n\t\t\t\t\t\t\tto={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n\t\t\t\t\t\t\t>Sign in</Link>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t</FormContainer>\r\n\t)\r\n}\r\n\r\nexport default RegisterScreen","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\UserEditScreen.js",["206"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\nfunction UserEditScreen({match, history}) {\r\n\r\n\tconst userId = match.params.id\r\n\r\n\tconst [name, setName] = useState('')\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [isAdmin, setAdmin] = useState(false)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst userDetails = useSelector(state => state.userDetails)\r\n\tconst {error, loading, user} = userDetails\r\n\r\n\tconst userUpdate = useSelector(state => state.userUpdate)\r\n\tconst {error:errorUpdate, loading:loadingUpdate, success:successUpdate} = userUpdate\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif(successUpdate){\r\n\t\t\tdispatch({type:USER_UPDATE_RESET})\r\n\t\t\thistory.push('/admin/userlist')\r\n\t\t}else{\r\n\r\n\t\t\tif(!user.name || user._id !== Number(userId)){\r\n\t\t\t\tdispatch(getUserDetails(userId))\r\n\t\t\t}else{\r\n\t\t\t\tsetName(user.name)\r\n\t\t\t\tsetEmail(user.email)\r\n\t\t\t\tsetAdmin(user.isAdmin)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}, [user, userId, successUpdate, history])\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tdispatch(updateUser({_id:user._id, name, email, isAdmin}))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t<Link to='/admin/userlist'>\r\n\t\t\t\tGo Back\r\n\t\t\t</Link>\r\n\t\t\t<FormContainer>\r\n\t\t\t\t<h1>Edit User</h1>\r\n\t\t\t\t{loadingUpdate && <Loader />}\r\n\t\t\t\t{errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n\t\t\t\t{loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n\t\t\t\t:(\r\n\t\t\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t\t\t<Form.Group controlId='name'>\r\n\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t \ttype='name' \r\n\t\t\t\t\t\t\t\tplaceholder='Enter Name'\r\n\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t \ttype='email' \r\n\t\t\t\t\t\t\t\tplaceholder='Enter Email'\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group controlId='isadmin'>\r\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t \ttype='checkbox' \r\n\t\t\t\t\t\t\t\tlabel='Is Admin'\r\n\t\t\t\t\t\t\t\tchecked={isAdmin}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setAdmin(e.target.checked)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</Form.Check>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</FormContainer>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UserEditScreen","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\ProductEditScreen.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\ProductListScreen.js",["207"],"import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({history, match}) {\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst productList = useSelector(state=>state.productList)\r\n\tconst {loading, error, products, pages, page} = productList\r\n\r\n\tconst productDelete = useSelector(state=>state.productDelete)\r\n\tconst {loading:loadingDelete, error:errorDelete, success:successDelete} = productDelete\r\n\r\n\tconst productCreate = useSelector(state=>state.productCreate)\r\n\tconst {loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct} = productCreate\r\n\r\n\tconst userLogin = useSelector(state=>state.userLogin)\r\n\tconst {userInfo} = userLogin\r\n\r\n\tlet keyword = history.location.search\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch({type:PRODUCT_CREATE_RESET})\r\n\r\n\t\tif(!userInfo.isAdmin){\r\n\t\t\thistory.push('/login')\r\n\t\t}\r\n\r\n\t\tif(successCreate){\r\n\t\t\thistory.push(`/admin/product/${createdProduct._id}/edit`)\r\n\t\t}else{\r\n\t\t\tdispatch(listProducts(keyword))\r\n\t\t}\r\n\r\n\t}, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\tconst deleteHandler = (id) => {\r\n\t\tif(window.confirm('Are you sure you want to delete this product?')){\r\n\t\t\tdispatch(deleteProduct(id))\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst createProductHandler = (product) => {\r\n\t\tdispatch(createProduct())\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Row className='align-items-center'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h1>Products</h1>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className='text-right'>\r\n\t\t\t\t\t<Button className='my-3' onClick={createProductHandler}>\r\n\t\t\t\t\t\t<i className='fas fa-plus'></i> Create Product\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t{loadingDelete && <Loader />}\r\n\t\t\t{errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\t\t\t{loadingCreate && <Loader />}\r\n\t\t\t{errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n\t\t\t{loading\r\n\t\t\t\t? (<Loader />)\r\n\t\t\t\t: error\r\n\t\t\t\t\t? (<Message variant='danger'>{error}</Message>)\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Table striped bordered hover responsive className='table-sm'>\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>NAME</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>PRICE</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>CATEGORY</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>BRAND</th>\r\n\t\t\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{products.map(product=>(\r\n\t\t\t\t\t\t\t\t\t\t<tr key={product._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{product._id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{product.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{product.price}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{product.category}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{product.brand}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant='light' className='btn-sm'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-edit'></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant='danger' className='btn-sm' onClick={()=>deleteHandler(product._id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-trash'></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t<Paginate pages={pages} page={page} isAdmin={true} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProductListScreen","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\OrderListScreen.js",["208"],"import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({history}) {\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst orderList = useSelector(state=>state.orderList)\r\n\tconst {loading, error, orders} = orderList\r\n\r\n\tconst userLogin = useSelector(state=>state.userLogin)\r\n\tconst {userInfo} = userLogin\r\n\r\n\tuseEffect(() => {\r\n\t\tif(userInfo && userInfo.isAdmin){\r\n\t\t\tdispatch(listOrders())\r\n\t\t}else{\r\n\t\t\thistory.push('/login')\r\n\t\t}\r\n\t}, [dispatch, history, userInfo])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Orders</h3>\r\n\t\t\t{loading\r\n\t\t\t\t? (<Loader />)\r\n\t\t\t\t: error\r\n\t\t\t\t\t? (<Message variant='danger'>{error}</Message>)\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\t<Table striped bordered hover responsive className='table-sm'>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t\t<th>USER</th>\r\n\t\t\t\t\t\t\t\t\t<th>DATE</th>\r\n\t\t\t\t\t\t\t\t\t<th>TOTAL</th>\r\n\t\t\t\t\t\t\t\t\t<th>PAID</th>\r\n\t\t\t\t\t\t\t\t\t<th>DELIVERED</th>\r\n\t\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{orders.map(order=>(\r\n\t\t\t\t\t\t\t\t\t<tr key={order._id}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{order._id}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{order.user && order.user.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{order.createdAt.substring(0,10)}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>${order.totalPrice}</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<td>{order.isPaid ? (\r\n\t\t\t\t\t\t\t\t\t\t\torder.paidAt.substring(0,10)\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-check' style={{color:'red'}}></i>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<td>{order.isDelivered ? (\r\n\t\t\t\t\t\t\t\t\t\t\torder.deliveredAt.substring(0,10)\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-check' style={{color:'red'}}></i>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/order/${order._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant='light' className='btn-sm'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDetails\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default OrderListScreen","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\CartScreen.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\reducers\\orderReducer.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\reducers\\userReducers.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\screens\\UserListScreen.js",["209"],"import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({history}) {\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst userList = useSelector(state=>state.userList)\r\n\tconst {loading, error, users} = userList\r\n\r\n\tconst userLogin = useSelector(state=>state.userLogin)\r\n\tconst {userInfo} = userLogin\r\n\r\n\tconst userDelete = useSelector(state=>state.userDelete)\r\n\tconst {success:successDelete} = userDelete\r\n\r\n\tuseEffect(() => {\r\n\t\tif(userInfo && userInfo.isAdmin){\r\n\t\t\tdispatch(listUsers())\r\n\t\t}else{\r\n\t\t\thistory.push('/login')\r\n\t\t}\r\n\t}, [dispatch, history, successDelete, userInfo])\r\n\r\n\tconst deleteHandler = (id) => {\r\n\t\tif(window.confirm('Are you sure you want to delete this user?')){\r\n\t\t\tdispatch(deleteUser(id))\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Users</h3>\r\n\t\t\t{loading\r\n\t\t\t\t? (<Loader />)\r\n\t\t\t\t: error\r\n\t\t\t\t\t? (<Message variant='danger'>{error}</Message>)\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\t<Table striped bordered hover responsive className='table-sm'>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t\t<th>NAME</th>\r\n\t\t\t\t\t\t\t\t\t<th>EMAIL</th>\r\n\t\t\t\t\t\t\t\t\t<th>ADMIN</th>\r\n\t\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{users.map(user=>(\r\n\t\t\t\t\t\t\t\t\t<tr key={user._id}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{user._id}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{user.email}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{user.isAdmin ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-check' style={{color:'green'}}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-check' style={{color:'red'}}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t)}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant='light' className='btn-sm'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-edit'></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Button variant='danger' className='btn-sm' onClick={()=>deleteHandler(user._id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-trash'></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UserListScreen","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Rating.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Loader.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\SearchBox.js",["210"],"import React, {useState, setState} from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n\tconst [keyword, setKeyword] = useState('')\r\n\r\n\tlet history = useHistory()\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif(keyword){\r\n\t\t\thistory.push(`/?keyword=${keyword}&page=1`)\r\n\t\t\t// const a = document.getElementById('search').value=''\r\n\t\t}else{\r\n\t\t\thistory.push(history.push(history.location.pathname))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={submitHandler} inline>\r\n\t\t\t<Form.Control\r\n\t\t\t\ttype='text'\r\n\t\t\t\tid='search'\r\n\t\t\t\tname='q'\r\n\t\t\t\tonChange={(e)=>setKeyword(e.target.value)}\r\n\t\t\t\tclassName='mr-sm-2 ml-sm-5'\r\n\t\t\t>\r\n\t\t\t</Form.Control>\r\n\t\t\t<Button\r\n\t\t\t\ttype='submit'\r\n\t\t\t\tvariant='outline-light'\r\n\t\t\t\tclassName='p-2'\r\n\t\t\t>\r\n\t\t\t\tSubmit\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\nexport default SearchBox","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Message.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\products.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Product.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\Paginate.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\ProductCarousel.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\FormContainer.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\actions\\cartActions.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\actions\\userActions.js",["211","212"],"import axios from 'axios'\r\nimport { \r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGIN_FAIL,\r\n\tUSER_LOGOUT,\r\n\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_FAIL,\r\n\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_DETAILS_FAIL,\r\n\tUSER_DETAILS_RESET,\r\n\r\n\tUSER_UPDATE_PROFILE_REQUEST,\r\n\tUSER_UPDATE_PROFILE_SUCCESS,\r\n\tUSER_UPDATE_PROFILE_FAIL,\r\n\tUSER_UPDATE_PROFILE_RESET,\r\n\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAIL,\r\n\tUSER_LIST_RESET,\r\n\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAIL,\r\n\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAIL,\r\n\tUSER_UPDATE_RESET,\r\n } from '../constants/userConstants'\r\n\r\n import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n\r\nexport const login = (email, password)=> async (dispatch) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:USER_LOGIN_REQUEST\r\n \t\t})\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json'\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.post('/api/users/login', {'username':email, 'password':password}, config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: USER_LOGIN_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n \t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:USER_LOGIN_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n\tlocalStorage.removeItem('userInfo')\r\n\tdispatch({type:USER_LOGOUT})\r\n\tdispatch({type:USER_DETAILS_RESET})\r\n\tdispatch({type:ORDER_LIST_MY_RESET})\r\n\tdispatch({type:USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password)=> async (dispatch) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:USER_REGISTER_REQUEST\r\n \t\t})\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json'\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.post('/api/users/register/', {'name':name, 'email':email, 'password':password}, config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: USER_REGISTER_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: USER_LOGIN_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n \t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:USER_REGISTER_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\n\r\nexport const getUserDetails = (id)=> async (dispatch, getState) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:USER_DETAILS_REQUEST\r\n \t\t})\r\n\r\n \t\tconst  {\r\n \t\t\tuserLogin:{userInfo},\r\n \t\t} = getState()\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json',\r\n \t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.get(`/api/users/${id}/`,config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: USER_DETAILS_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:USER_DETAILS_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\n\r\nexport const updateUserProfile = (user)=> async (dispatch, getState) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:USER_UPDATE_PROFILE_REQUEST\r\n \t\t})\r\n\r\n \t\tconst  {\r\n \t\t\tuserLogin:{userInfo},\r\n \t\t} = getState()\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json',\r\n \t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.put(`/api/users/profile/update/`, user,config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: USER_UPDATE_PROFILE_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: USER_LOGIN_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n \t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\r\n \t\t\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:USER_UPDATE_PROFILE_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\n\r\nexport const listUsers = ()=> async (dispatch, getState) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:USER_LIST_REQUEST\r\n \t\t})\r\n\r\n \t\tconst  {\r\n \t\t\tuserLogin:{userInfo},\r\n \t\t} = getState()\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json',\r\n \t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.get(`/api/users/`, config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: USER_LIST_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n \t\t\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:USER_LIST_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\nexport const deleteUser = (id)=> async (dispatch, getState) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:USER_DELETE_REQUEST\r\n \t\t})\r\n\r\n \t\tconst  {\r\n \t\t\tuserLogin:{userInfo},\r\n \t\t} = getState()\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json',\r\n \t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.delete(`/api/users/delete/${id}/`, config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: USER_DELETE_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n \t\t\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:USER_DELETE_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\nexport const updateUser = (user)=> async (dispatch, getState) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:USER_UPDATE_REQUEST\r\n \t\t})\r\n\r\n \t\tconst  {\r\n \t\t\tuserLogin:{userInfo},\r\n \t\t} = getState()\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json',\r\n \t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.put(`/api/users/update/${user._id}/`, user, config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: USER_UPDATE_SUCCESS,\r\n \t\t})\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: USER_DETAILS_SUCCESS,\r\n \t\t\tpayload: data\r\n \t\t})\r\n \t\t\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:USER_UPDATE_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\n","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\actions\\orderActions.js",["213","214","215"],"import { ORDER_CREATE_REQUEST,\r\n \tORDER_CREATE_SUCCESS,\r\n  \tORDER_CREATE_FAIL,\r\n\r\n  \tORDER_DETAILS_REQUEST,\r\n  \tORDER_DETAILS_SUCCESS,\r\n  \tORDER_DETAILS_FAIL,\r\n\r\n  \tORDER_PAY_REQUEST,\r\n  \tORDER_PAY_SUCCESS,\r\n  \tORDER_PAY_FAIL,\r\n  \tORDER_PAY_RESET,\r\n\r\n  \tORDER_LIST_MY_REQUEST,\r\n  \tORDER_LIST_MY_SUCCESS,\r\n  \tORDER_LIST_MY_FAIL,\r\n  \tORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n  \t} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order)=> async (dispatch, getState) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:ORDER_CREATE_REQUEST\r\n \t\t})\r\n\r\n \t\tconst  {\r\n \t\t\tuserLogin:{userInfo},\r\n \t\t} = getState()\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json',\r\n \t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.post(`/api/orders/add/`, order,config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: ORDER_CREATE_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: CART_CLEAR_ITEMS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n\r\n \t\tlocalStorage.removeItem('cartItems')\r\n\r\n\r\n \t\t\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:ORDER_CREATE_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\n\r\nexport const getOrderDetails = (id)=> async (dispatch, getState) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:ORDER_DETAILS_REQUEST\r\n \t\t})\r\n\r\n \t\tconst  {\r\n \t\t\tuserLogin:{userInfo},\r\n \t\t} = getState()\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json',\r\n \t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.get(`/api/orders/${id}/`, config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: ORDER_DETAILS_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n \t\t\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:ORDER_DETAILS_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult)=> async (dispatch, getState) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:ORDER_PAY_REQUEST\r\n \t\t})\r\n\r\n \t\tconst  {\r\n \t\t\tuserLogin:{userInfo},\r\n \t\t} = getState()\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json',\r\n \t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.put(`/api/orders/${id}/pay/`, paymentResult, config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: ORDER_PAY_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n \t\t\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:ORDER_PAY_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\nexport const deliverOrder = (order)=> async (dispatch, getState) => {\r\n  try{\r\n    dispatch({\r\n      type:ORDER_DELIVER_REQUEST\r\n    })\r\n\r\n    const  {\r\n      userLogin:{userInfo},\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers:{\r\n        'Content-type':'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const {data} = await axios.put(`/api/orders/${order._id}/deliver/`, {}, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload:data\r\n    })\r\n\r\n    \r\n  }catch(error){\r\n    dispatch({\r\n      type:ORDER_DELIVER_FAIL,\r\n      payload:error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = ()=> async (dispatch, getState) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:ORDER_LIST_MY_REQUEST\r\n \t\t})\r\n\r\n \t\tconst  {\r\n \t\t\tuserLogin:{userInfo},\r\n \t\t} = getState()\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json',\r\n \t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.get(`/api/orders/myorders/`, config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: ORDER_LIST_MY_SUCCESS,\r\n \t\t\tpayload:data\r\n \t\t})\r\n\r\n \t\t\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:ORDER_LIST_MY_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\nexport const listOrders = ()=> async (dispatch, getState) => {\r\n  try{\r\n    dispatch({\r\n      type:ORDER_LIST_REQUEST\r\n    })\r\n\r\n    const  {\r\n      userLogin:{userInfo},\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers:{\r\n        'Content-type':'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const {data} = await axios.get(`/api/orders/`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload:data\r\n    })\r\n\r\n    \r\n  }catch(error){\r\n    dispatch({\r\n      type:ORDER_LIST_FAIL,\r\n      payload:error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n\r\n","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\components\\CheckoutSteps.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\constants\\productConstants.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\constants\\userConstants.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\actions\\productActions.js",["216"],"import axios from 'axios'\r\nimport { \r\n\tPRODUCT_LIST_REQUEST,\r\n\tPRODUCT_LIST_SUCCESS,\r\n\tPRODUCT_LIST_FAIL,\r\n\r\n\tPRODUCT_DETAILS_REQUEST,\r\n\tPRODUCT_DETAILS_SUCCESS,\r\n\tPRODUCT_DETAILS_FAIL,\r\n\r\n\tPRODUCT_DELETE_REQUEST,\r\n\tPRODUCT_DELETE_SUCCESS,\r\n\tPRODUCT_DELETE_FAIL,\r\n\r\n\tPRODUCT_CREATE_REQUEST,\r\n\tPRODUCT_CREATE_SUCCESS,\r\n\tPRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n } from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword='') => async (dispatch) => {\r\n \ttry{\r\n \t\tdispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n \t\tconst {data} = await axios.get(`/api/products${keyword}`)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype:PRODUCT_LIST_SUCCESS,\r\n \t\t\tpayload: data\r\n \t\t})\r\n \t} catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:PRODUCT_LIST_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n }\r\n\r\n\r\n export const listProductDetails = (id) => async (dispatch) => {\r\n \ttry{\r\n \t\tdispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n \t\tconst {data} = await axios.get(`/api/products/${id}`)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype:PRODUCT_DETAILS_SUCCESS,\r\n \t\t\tpayload: data\r\n \t\t})\r\n \t} catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:PRODUCT_DETAILS_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\nexport const deleteProduct = (id)=> async (dispatch, getState) => {\r\n \ttry{\r\n \t\tdispatch({\r\n \t\t\ttype:PRODUCT_DELETE_REQUEST\r\n \t\t})\r\n\r\n \t\tconst  {\r\n \t\t\tuserLogin:{userInfo},\r\n \t\t} = getState()\r\n\r\n \t\tconst config = {\r\n \t\t\theaders:{\r\n \t\t\t\t'Content-type':'application/json',\r\n \t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n \t\t\t}\r\n \t\t}\r\n\r\n \t\tconst {data} = await axios.delete(`/api/products/${id}/delete/`, config)\r\n\r\n \t\tdispatch({\r\n \t\t\ttype: PRODUCT_DELETE_SUCCESS,\r\n \t\t})\r\n\r\n \t\t\r\n \t}catch(error){\r\n \t\tdispatch({\r\n \t\t\ttype:PRODUCT_DELETE_FAIL,\r\n \t\t\tpayload:error.response && error.response.data.detail\r\n \t\t\t\t? error.response.data.detail\r\n \t\t\t\t: error.message\r\n \t\t})\r\n \t}\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/${product._id}/update/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({type:PRODUCT_DETAILS_SUCCESS, payload:data})\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type:PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type:PRODUCT_TOP_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n }\r\n\r\n\r\n\r\n\r\n\r\n","F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\constants\\orderConstants.js",[],"F:\\My_projects\\Django_Projects\\proshop\\backend\\frontend\\src\\constants\\cartConstants.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":3,"column":34,"nodeType":"223","messageId":"224","endLine":3,"endColumn":37},{"ruleId":"221","severity":1,"message":"225","line":7,"column":8,"nodeType":"223","messageId":"224","endLine":7,"endColumn":16},{"ruleId":"221","severity":1,"message":"226","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":13},{"ruleId":"221","severity":1,"message":"227","line":1,"column":16,"nodeType":"223","messageId":"224","endLine":1,"endColumn":24},{"ruleId":"221","severity":1,"message":"228","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":35},{"ruleId":"221","severity":1,"message":"229","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"231","line":52,"column":16,"nodeType":"232","messageId":"233","endLine":52,"endColumn":18},{"ruleId":"221","severity":1,"message":"228","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":35},{"ruleId":"221","severity":1,"message":"227","line":1,"column":16,"nodeType":"223","messageId":"224","endLine":1,"endColumn":24},{"ruleId":"234","severity":1,"message":"235","line":33,"column":4,"nodeType":"236","endLine":33,"endColumn":22,"suggestions":"237"},{"ruleId":"234","severity":1,"message":"238","line":65,"column":4,"nodeType":"236","endLine":65,"endColumn":58,"suggestions":"239"},{"ruleId":"230","severity":1,"message":"231","line":34,"column":16,"nodeType":"232","messageId":"233","endLine":34,"endColumn":18},{"ruleId":"234","severity":1,"message":"240","line":44,"column":5,"nodeType":"236","endLine":44,"endColumn":43,"suggestions":"241"},{"ruleId":"221","severity":1,"message":"227","line":1,"column":16,"nodeType":"223","messageId":"224","endLine":1,"endColumn":24},{"ruleId":"221","severity":1,"message":"227","line":1,"column":16,"nodeType":"223","messageId":"224","endLine":1,"endColumn":24},{"ruleId":"221","severity":1,"message":"227","line":1,"column":16,"nodeType":"223","messageId":"224","endLine":1,"endColumn":24},{"ruleId":"221","severity":1,"message":"242","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":34},{"ruleId":"221","severity":1,"message":"243","line":20,"column":2,"nodeType":"223","messageId":"224","endLine":20,"endColumn":27},{"ruleId":"221","severity":1,"message":"244","line":34,"column":2,"nodeType":"223","messageId":"224","endLine":34,"endColumn":19},{"ruleId":"221","severity":1,"message":"245","line":12,"column":4,"nodeType":"223","messageId":"224","endLine":12,"endColumn":19},{"ruleId":"221","severity":1,"message":"246","line":17,"column":4,"nodeType":"223","messageId":"224","endLine":17,"endColumn":23},{"ruleId":"221","severity":1,"message":"247","line":26,"column":5,"nodeType":"223","messageId":"224","endLine":26,"endColumn":24},{"ruleId":"221","severity":1,"message":"248","line":91,"column":11,"nodeType":"223","messageId":"224","endLine":91,"endColumn":15},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'products' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["251"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["252"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["253"],"'setState' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"260","text":"261"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"262","text":"263"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"264","text":"265"},[1203,1221],"[success, history, order._id, dispatch]",[2077,2131],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1306,1344],"[user, userId, successUpdate, history, dispatch]"]